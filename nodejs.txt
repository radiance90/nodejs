$ node main.js
$ npm ls
$ npm install express
$ npm ls -g
$ npm install express -g
$ npm uninstall express
$ npm update express
$ npm search express
$ npm init  //create module
$ npm adduser
$ npm publish


Callback is an asynchronous equivalent for a function. A callback function is called at the completion of a given task. Node makes heavy use of callbacks. All the APIs of Node are written in such a way that they support callbacks.

Node.js is a single-threaded application, but it can support concurrency via the concept of event and callbacks. Every API of Node.js is asynchronous and being single-threaded, they use async function calls to maintain concurrency. Node uses observer pattern. Node thread keeps an event loop and whenever a task gets completed, it fires the corresponding event which signals the event-listener function to execute.

In Node Application, any async function accepts a callback as the last parameter and a callback function accepts an error as the first parameter. fs.readFile('input.txt', function (err, data) {

